/*
С детства Максим был неплохим музыкантом и мастером на все руки.
Недавно он самостоятельно сделал несложный перкуссионный музыкальный инструмент — треугольник.
Ему нужно узнать, какова частота звука, издаваемого его инструментом.

У Максима есть профессиональный музыкальный тюнер,
с помощью которого можно проигрывать ноту с заданной частотой.
Максим действует следующим образом:
	он включает на тюнере ноты с разными частотами
	и для каждой ноты на слух определяет,
	ближе или дальше она к издаваемому треугольником звуку, чем предыдущая нота.
	Поскольку слух у Максима абсолютный,
	он определяет это всегда абсолютно верно.

Вам Максим показал запись, в которой приведена последовательность частот,
выставляемых им на тюнере, и про каждую ноту, начиная со второй,
записано — ближе или дальше она к звуку треугольника, чем предыдущая нота.
Заранее известно, что частота звучания треугольника Максима составляет
не менее 30 герц и не более 4000 герц.

Требуется написать программу, которая определяет,
в каком интервале может находиться частота звучания треугольника.

Формат ввода
Первая строка входного файла содержит целое число n — количество нот,
которые воспроизводил Максим с помощью тюнера (2 ≤ n ≤ 1000).
Последующие n строк содержат записи Максима,
причём каждая строка содержит две компоненты:
	вещественное число fi — частоту, выставленную на тюнере, в герцах (30 ≤ fi ≤ 4000),
	и слово «closer» или слово «further» для каждой частоты, кроме первой.

Слово «closer» означает, что частота данной ноты ближе
к частоте звучания треугольника, чем частота предыдущей ноты,
что формально описывается соотношением: |fi − ftriangle| < |fi − 1 − ftriangle| .

Слово «further» означает, что частота данной ноты дальше, чем предыдущая.

Если оказалось, что очередная нота так же близка к звуку треугольника,
как и предыдущая нота, то Максим мог записать любое из двух указанных выше слов.

Гарантируется, что результаты, полученные Максимом, непротиворечивы.

Формат вывода
В выходной файл необходимо вывести через пробел два вещественных числа —
наименьшее и наибольшее возможное значение частоты звучания треугольника, изготовленного Максимом.
Числа должны быть выведены с точностью не хуже 10^−6.
*/
package main

import (
	"fmt"
	"math"
)

func main() {
	var n int // n — количество нот
	fmt.Scan(&n)
	var fi float64
	fmt.Scan(&fi)
	left, right := notReallyBinarySearch(n, fi)
	fmt.Printf("%f %f", left, right)
}

// Вот только сегодня про бинарный поиск в Грокаем Алгоритмы прочитал
func notReallyBinarySearch(n int, prevfi float64) (float64, float64) {
	// 30 4000
	var left, right float64 = 30, 4000
	var currentfi float64
	var word string
	for i := 1; i < n; i++ {
		fmt.Scan(&currentfi, &word)
		// Объект заплатка для вещественной арифметики
		if math.Abs(currentfi-prevfi) < math.Pow(10, -6) {
			continue
		}
		if word == "closer" {
			if currentfi > prevfi {
				left = math.Max(left, (currentfi+prevfi)/2)
			} else {
				right = math.Min(right, (currentfi+prevfi)/2)
			}
		} else {
			if currentfi < prevfi {
				left = math.Max(left, (currentfi+prevfi)/2)
			} else {
				right = math.Min(right, (currentfi+prevfi)/2)
			}
		}
		prevfi = currentfi
	}
	return left, right
}
